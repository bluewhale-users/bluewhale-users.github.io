<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Usage on Documentation for Hugo Learn Theme</title>
    <link>https://bluewhale-users.github.io/ko/apigee/usage/</link>
    <description>Recent content in Usage on Documentation for Hugo Learn Theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Tue, 29 Mar 2022 14:35:58 +0900</lastBuildDate><atom:link href="https://bluewhale-users.github.io/ko/apigee/usage/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Apigee1 : 소개</title>
      <link>https://bluewhale-users.github.io/ko/apigee/usage/apigee1/</link>
      <pubDate>Tue, 29 Mar 2022 13:44:42 +0900</pubDate>
      
      <guid>https://bluewhale-users.github.io/ko/apigee/usage/apigee1/</guid>
      <description>Apigee 소개  Apigee 기술문서 Apigee 문서 Choosing between service management and API management  1. 요약 Apigee는 API 개발 및 관리를 위한 플랫폼입니다. Apigee는 프록시 레이어와 함께 서비스를 전면에 내세워 백엔드 서비스 API의 추상화 또는 퍼사드를 제공하고 보안, 비율 제한, 할당량, 분석 등을 제공합니다.
2. Apigee 사용 목적  전체 API 수명 주기 기능으로 API 프로그램 빌드 및 확장 유연한 개발자 포털 옵션으로 API 사용 촉진 전체 API 가치 사슬에서 활용 가능한 분석 정보 확보 API 제품으로 수익을 창출하고 디지털 자산의 비즈니스 가치 극대화  3.</description>
    </item>
    
    <item>
      <title>Apigee2 : 무료로 사용해보기</title>
      <link>https://bluewhale-users.github.io/ko/apigee/usage/apigee2/</link>
      <pubDate>Tue, 29 Mar 2022 13:44:49 +0900</pubDate>
      
      <guid>https://bluewhale-users.github.io/ko/apigee/usage/apigee2/</guid>
      <description>1. Apigee 이동 2. 무료로 사용해 보기 선택  3. GCP project ID가 필요하다.  프로젝트는 모든 Google Cloud 리소스를 구성합니다. 프로젝트는 사용자 집합, API 집합, 그리고 이러한 API에 대한 청구, 인증, 모니터링 설정으로 구성됩니다. 예를 들어 모든 Cloud Storage 버킷과 객체는 이를 액세스할 수 있는 사용자 권한과 함께 프로젝트에 상주합니다. 프로젝트를 한 개만 갖거나 여러 프로젝트를 만들 수 있으며, 이를 사용하여 Cloud Storage 데이터를 포함한 Google Cloud 리소스를 논리적 그룹으로 구성할 수 있습니다.</description>
    </item>
    
    <item>
      <title>Apigee3 : API Reverse Proxy</title>
      <link>https://bluewhale-users.github.io/ko/apigee/usage/apigee3/</link>
      <pubDate>Tue, 29 Mar 2022 13:44:51 +0900</pubDate>
      
      <guid>https://bluewhale-users.github.io/ko/apigee/usage/apigee3/</guid>
      <description>1. Create New 선택  2. Reverse proxy 선택  3. Proxy 설정 추가 Name : okd Target : http://dotnetexample-okd-tutorial.apps.blackwhale.cloud.hancom.com/WeatherForecast  4. Add CORS Headers 체크  5. Optional Deployment - eval 체크 안함  6. Create 완료 - Edit proxy 선택  7. Revision을 1번을 Deploy 한다.  8. 서비스 어카운트 설정은 기본값으로 Deploy  9. URL에 접속해 프록시가 동작하는지 확인한다.  https://spsenti2023.duckdns.org/okd   10. 새버전 추가    좌측의 Revision Dropdown 메뉴를 선택해 Save as new revision을 선택한다.</description>
    </item>
    
    <item>
      <title>Apigee4 : 개발자 포털1</title>
      <link>https://bluewhale-users.github.io/ko/apigee/usage/apigee4/</link>
      <pubDate>Tue, 29 Mar 2022 13:44:57 +0900</pubDate>
      
      <guid>https://bluewhale-users.github.io/ko/apigee/usage/apigee4/</guid>
      <description>1. Apigee -&amp;gt; Publish -&amp;gt; Portals -&amp;gt; Get Started 선택  2. 이름 입력  3. 관리 화면  우측 상단의 Live Potal을 선택한다.    4. 개발자포털 화면  https://pure-fold-339305-developers.apigee.io/    5. 계정 생성   우측상단의 Sign In을 눌러 계정을 만든다.    인증메일을 발송한다.    6. 전송된 링크로 접속 확인   7. My App 만들기  계정을 눌러 Apps를 선택한다.    8.</description>
    </item>
    
    <item>
      <title>Apigee5 : 개발자 포털2</title>
      <link>https://bluewhale-users.github.io/ko/apigee/usage/apigee5/</link>
      <pubDate>Tue, 29 Mar 2022 13:44:59 +0900</pubDate>
      
      <guid>https://bluewhale-users.github.io/ko/apigee/usage/apigee5/</guid>
      <description>개발자 포털 Open-API-Specification
샘플
1. API Document 추가  API catalog 선택    2. Portals -&amp;gt; Pages 이동  API 선택(okd-api-sample)    3. 우측의 연필 모양 클릭해 편집모드로 변경  4. API Documentation   Source API sepc 리스트박스 선택(Select OpenAPI Spec)    JSON 파일 업로드     [sample json]
{  &amp;#34;openapi&amp;#34;: &amp;#34;3.0.1&amp;#34;,  &amp;#34;info&amp;#34;: {  &amp;#34;title&amp;#34;: &amp;#34;okd-sample-API Service&amp;#34;,  &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;  },  &amp;#34;servers&amp;#34;: [  {  &amp;#34;url&amp;#34;: &amp;#34;https://dotnetexample-okd-tutorial.</description>
    </item>
    
    <item>
      <title>Apigee6 : 개발자 포털3</title>
      <link>https://bluewhale-users.github.io/ko/apigee/usage/apigee6/</link>
      <pubDate>Tue, 29 Mar 2022 13:45:01 +0900</pubDate>
      
      <guid>https://bluewhale-users.github.io/ko/apigee/usage/apigee6/</guid>
      <description>1. 페이지 추가(+Page 선택)  2. 페이지 이름 입력(경록 확인 : test)  3. 페이지 편집  Publish 선택    4. 메뉴 추가  5. 메뉴 이름 입력(Page Path 입력 : test)  6. Publish 선택  7. Live Portal 확인  </description>
    </item>
    
    <item>
      <title>Apigee7 : API Proxies Demo</title>
      <link>https://bluewhale-users.github.io/ko/apigee/usage/apigee7/</link>
      <pubDate>Tue, 29 Mar 2022 13:45:03 +0900</pubDate>
      
      <guid>https://bluewhale-users.github.io/ko/apigee/usage/apigee7/</guid>
      <description>Create New  Reverse Proxy 선택  Proxy details  Name: okd-api Base path: okd-api Target: https://dotnetexample-okd-tutorial.apps.blackwhale.cloud.hancom.com/Document  Security(Authorization) : API Key Quota: Impose quotas per App Security(Browser) : Add CORS headers Summary  Edit Proxy  Overview  eval(개발환경) deploy   Deploy 선택    DEVELOP 탭 확인  PreFlow [Policies] - Add CORS - Impose Quota - Remove Query Param apikey - Verify API Key  API Products 추가(Create New 선택)  Product details 입력  Name: okd-api-product Display Name: Demo API Environment: eval Access: Public Oprations 추가(ADD AN OPERATION)  API Proxy : okd-api Operation: /okd-api Methods: 모두 선택 Save를 눌러 저장한다.</description>
    </item>
    
    <item>
      <title>Apigee8 : VS Code에서 Apigee를 사용해 API 프록시 빌드하기</title>
      <link>https://bluewhale-users.github.io/ko/apigee/usage/apigee8/</link>
      <pubDate>Tue, 29 Mar 2022 13:45:07 +0900</pubDate>
      
      <guid>https://bluewhale-users.github.io/ko/apigee/usage/apigee8/</guid>
      <description>참고
순서  Apigee 작업공간을 만들어 Apigee를 사용하는 로컬 개발에 필요한 디렉터리 구조를 설정합니다. API 프록시를 만듭니다. API 프록시를 모의 대상 엔드포인트에 연결하여 작동 방식을 확인할 수 있습니다. 새 API 프록시가 포함된 환경을 구성하고 배포합니다. API를 테스트합니다. 테스트 리소스를 빌드하고 내보내고 API를 테스트하기 위해 API 키를 사용하여 인증하는 방법을 알아봅니다. API 프록시에서 XML 데이터를 반환하도록 대상 엔드포인트를 변경합니다. 정책을 연결하여 응답을 XML에서 JSON으로 변환합니다. Apigee 환경에 배포합니다. 보관 파일을 프로덕션으로 승격합니다.</description>
    </item>
    
    <item>
      <title>Apigee9 : Apigee 환경에 배포하기</title>
      <link>https://bluewhale-users.github.io/ko/apigee/usage/apigee9/</link>
      <pubDate>Tue, 29 Mar 2022 13:45:10 +0900</pubDate>
      
      <guid>https://bluewhale-users.github.io/ko/apigee/usage/apigee9/</guid>
      <description>참고
 Google Cloud SDK와 gcloud beta apigee 구성요소 설치
  gcloud beta 구성요소 설치  gcloud components install beta  베타 구성요소 설치 확인  $ gcloud components list Your current Google Cloud CLI version is: 373.0.0 The latest available version is: 373.0.0 ┌────────────────────────────────────────────────────────────────────────────────────────────────────────────┐ │ Components │ ├───────────────┬──────────────────────────────────────────────────────┬──────────────────────────┬──────────┤ │ Status │ Name │ ID │ Size │ ├───────────────┼──────────────────────────────────────────────────────┼──────────────────────────┼──────────┤ │ Not Installed │ App Engine Go Extensions │ app-engine-go │ 4.</description>
    </item>
    
  </channel>
</rss>
